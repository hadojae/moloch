extends layout

block content
  - var help = { user: "The id used for login, can not be changed once created"}
  - help.name = "Friendly name for user";
  - help.forced = "A moloch expression that is silently added to all queries, useful to limit what data a user can access (ex what nodes or ips)";
  - help.enabled = "Is the account currently enabled for anything";
  - help.admin = "Can create new accounts and change the settings for other accounts";
  - help.web = "Can access the web interface, when off only APIs can be used";
  - help.webauth = "Can login using the web auth header, setting doesn't disable the password so it should be scrambled";
  - help.email = "Can perform email searches";
  - help.remove = "Can delete tags or delete/scrub pcap data";
  h2 System Users
  table#users(cellpadding="0",cellspacing="0",border="0",class="display",style="table { clear: both }")
    thead
      tr
        th(title=help.user) User Id
        th(title=help.name) Name
        th(title=help.forced) Forced Expression
        th(title=help.enabled) Enabled?
        th(title=help.admin) Admin?
        th(title=help.web) Web Interface?
        th(title=help.webauth) Web Auth Header?
        th(title=help.email) Email Search?
        th(title=help.remove) Can Remove Data?
        th Actions
    tbody
  br
  #users
  hr
  <h2> Add User</h2>
  form#addUser
    input(type='hidden', id='token', name='token', value='#{token}')
    label(for='userId',title=help.user) User ID
    input(type='text', id='userId', name='userId', size='30')
    br
    label(for='userName',title=help.name) User Name
    input(type='text', id='userName', name='userName', size='30')
    br
    label(for='Password') Password
    input(type='password', id='password', name='password', size='30')
    br
    label(for='Expression',title=help.forced) Forced Search Expression
    input(type='expression', id='expression', name='expression', size='60')
    br
    label(for='enabled',title=help.enabled) Enabled:
    input(type='checkbox', id='enabled', name='enabled', CHECKED)
    br
    label(for='createEnabled',title=help.admin) Admin User:
    input(type='checkbox', id='createEnabled', name='createEnabled')
    br
    label(for='webEnabled',title=help.web) Web Enabled User:
    input(type='checkbox', id='webEnabled', name='webEnabled', CHECKED)
    br
    label(for='headerAuthEnabled',title=help.webauth) Web Auth Header:
    input(type='checkbox', id='headerAuthEnabled', name='headerAuthEnabled')
    br
    label(for='emailSearch',title=help.email) Allow Email Searches:
    input(type='checkbox', id='emailSearch', name='emailSearch')
    br
    label(for='removeEnabled',title=help.remove) Can Scrub/Delete data:
    input(type='checkbox', id='removeEnabled', name='removeEnabled')
    br
    button#create create

  script(type='text/javascript').
    $("th[title]").qtip();
    $("label[title]").qtip();
    var usersTable;

    $(document).ready(function() {
      usersTable = $('#users').DataTable( {
        language: {
          processing: "<img src=\"watching.gif\"><div class='blink'>I'm Hootin' :D</div>",
          lengthMenu: "_MENU_",
          search: "Name filter: "
        },
        dom: '<"fg-toolbar ui-widget-header ui-helper-clearfix"lipfr>t<"fg-toolbar ui-widget-header ui-helper-clearfix"ip>',
        pageLength: 500,
        lengthMenu: [100, 500, 1000, 5000],
        processing: true,
        serverSide: true,
        ajax: {
          url: "#{basePath}users.json",
          type: "POST",
          data: function (d) {
            neworder = [];
            for (var o in d.order) {
              neworder.push(d.columns[d.order[o].column].data + ":" + d.order[o].dir);
            }
            d.order = neworder.join(",");
            delete d.columns;
            if (d.search) {
              d.filter = d.search.value;
              delete d.search;
            }
          }
        },
        paginationType: "full_numbers",
        retrieve: true,
        scrollCollapse: true,
        autoWidth: false,
        columns: [
          {
            data: "userId"
          },
          {
            data: "userName",
            className: "userName",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<div contentEditable>" + rowData.userName + "</div>");
            }
          },
          {
            data : "expression",
            className: "forcedExpression",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<div contentEditable>" + rowData.expression + "</div>");
            }
          },
          {
            data : "enabled",
            className: "enabled",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<input type='checkbox' " + (rowData.enabled?"CHECKED":"") + ">");
            }
          },
          {
            data : "createEnabled",
            className: "createEnabled",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<input type='checkbox' " + (rowData.createEnabled?"CHECKED":"") + ">");
            }
          },
          {
            data : "webEnabled",
            className: "webEnabled",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<input type='checkbox' " + (rowData.webEnabled?"CHECKED":"") + ">");
            }
          },
          {
            data : "headerAuthEnabled",
            className: "headerAuthEnabled",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<input type='checkbox' " + (rowData.headerAuthEnabled?"CHECKED":"") + ">");
            }
          },
          {
            data : "emailSearch",
            className: "emailSearch",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<input type='checkbox' " + (rowData.emailSearch?"CHECKED":"") + ">");
            }
          },
          {
            data : "removeEnabled",
            className: "removeEnabled",
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<input type='checkbox' " + (rowData.removeEnabled?"CHECKED":"") + ">");
            }
          },
          {
            data : null,
            bSortable : false,
            createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
              $(cell).html("<a href='#' class='deleteUserAction'>Delete</a> " +
                           "<a href='#' class='settingsUserAction'>Settings</a>");
            }
          }
        ]
      } );

      function saveRow(row) {
        var aData = usersTable.row(row).data();
        $.ajax( {
          "dataType": 'json',
          "type": "POST",
          "data": [{name: "token", value: "#{token}"}],
          "url": "#{basePath}updateUser/" + aData.userId + "?" +
            "&expression="        + encodeURIComponent($(row).find(".forcedExpression div").text()) +
            "&userName="          + encodeURIComponent($(row).find(".userName div").text()) +
            "&enabled="           + $(row).find(".enabled input").is(':checked') +
            "&webEnabled="        + $(row).find(".webEnabled input").is(':checked') +
            "&headerAuthEnabled=" + $(row).find(".headerAuthEnabled input").is(':checked') +
            "&emailSearch="       + $(row).find(".emailSearch input").is(':checked') +
            "&removeEnabled="     + $(row).find(".removeEnabled input").is(':checked') +
            "&createEnabled="     + $(row).find(".createEnabled input").is(':checked'),
          "success": function(data) {
            if (!data.success) {
              alert(data.text);
            }
          }
        });
        return true;
      }

      $(document).on('click', '.settingsUserAction', function (e) {
        var aData = usersTable.row(this.parentNode.parentNode).data();
        window.location = 'settings?userId=' + aData.userId;
      });

      $(document).on('click', '.deleteUserAction', function (e) {
        var aData = usersTable.row(this.parentNode.parentNode).data();
        return deleteUser(aData.userId);
      });

      $(document).on('focusout', '.forcedExpression div, .userName div', function () {
        var nTr = this.parentNode.parentNode;
        return saveRow(nTr);
      });

      $(document).on('keypress', '.forcedExpression div, .userName div', function (e) {
        if ((e.keyCode ? e.keyCode : e.which) === 13) {
          e.target.blur();
          return false;
        }
      });

      $(document).on('change', '#users tbody td input', function () {
        var nTr = this.parentNode.parentNode;
        return saveRow(nTr);
      } );

      $('#addUser').submit(function() {
        $.ajax( {
          "dataType": 'json',
          "type": "POST",
          "url": "#{basePath}addUser",
          "data": $("#addUser").serialize(),
          "success": function(data) {
            if (!data.success) {
              alert(data.text);
            } else {
              $("#userId").val("");
              $("#userName").val("");
              $("#password").val("");
            }
            usersTable.draw();
          }
        });
        return false;
      });
    } );
    function deleteUser(user) {
      $.ajax( {
        "dataType": 'json',
        "type": "POST",
        "url": "#{basePath}deleteUser/" + user,
        "data": [{name: "token", value: "#{token}"}],
        "complete": function(data) {
          if (!data.success) {
            alert(data.text);
          }
          usersTable.draw();
        }
      });
      return false;
    }
